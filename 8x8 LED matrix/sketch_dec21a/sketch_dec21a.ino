int rows[] = {A2, A3, 2, 3, 4, 5, 6, 7};
int columns[] = {8, 9, 10, 11, 12, 13, A0, A1};

boolean digit[10][5][3] = {{
  {1, 1, 1},
  {1, 0, 1},
  {1, 0, 1},
  {1, 0, 1},
  {1, 1, 1}
},
{
  {0, 0, 1},
  {0, 0, 1},
  {0, 0, 1},
  {0, 0, 1},
  {0, 0, 1}
},
{
  {1, 1, 1},
  {0, 0, 1},
  {1, 1, 1},
  {1, 0, 0},
  {1, 1, 1}
},
{
  {1, 1, 1},
  {0, 0, 1},
  {1, 1, 1},
  {0, 0, 1},
  {1, 1, 1}
},
{
  {1, 0, 1},
  {1, 0, 1},
  {1, 1, 1},
  {0, 0, 1},
  {0, 0, 1}
},
{
  {1, 1, 1},
  {1, 0, 0},
  {1, 1, 1},
  {0, 0, 1},
  {1, 1, 1}
},
{
  {1, 1, 1},
  {1, 0, 0},
  {1, 1, 1},
  {1, 0, 1},
  {1, 1, 1}
},
{
  {1, 1, 1},
  {0, 0, 1},
  {0, 0, 1},
  {1, 1, 0},
  {1, 0, 0}
},
{
  {1, 1, 1},
  {1, 0, 1},
  {1, 1, 1},
  {1, 0, 1},
  {1, 1, 1}
},
{
  {1, 1, 1},
  {1, 0, 1},
  {1, 1, 1},
  {0, 0, 1},
  {1, 1, 1}
}};

byte len[] = {1, 3, 3, 3, 3, 3, 3, 3, 3, 3};

boolean pic[4][8][8] = {{
  {1, 1, 1, 1, 1, 1, 1, 1},
  {1, 0, 0, 0, 0, 0, 0, 1},
  {1, 0, 0, 0, 0, 0, 0, 1},
  {1, 0, 0, 0, 0, 0, 0, 1},
  {1, 0, 0, 0, 0, 0, 0, 1},
  {1, 0, 0, 0, 0, 0, 0, 1},
  {1, 0, 0, 0, 0, 0, 0, 1},
  {1, 1, 1, 1, 1, 1, 1, 1}
},
{
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 0},
  {0, 1, 0, 0, 0, 0, 1, 0},
  {0, 1, 0, 0, 0, 0, 1, 0},
  {0, 1, 0, 0, 0, 0, 1, 0},
  {0, 1, 0, 0, 0, 0, 1, 0},
  {0, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 0, 0, 0}
},
{
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 1, 1, 1, 1, 0, 0},
  {0, 0, 1, 0, 0, 1, 0, 0},
  {0, 0, 1, 0, 0, 1, 0, 0},
  {0, 0, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0}
},
{
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 1, 1, 0, 0, 0},
  {0, 0, 0, 1, 1, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0}
}};

bool cur_state[8][9] {
  {1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 0, 0, 0, 0, 0, 0, 0, 0}
};

unsigned long curTime = 0;
int k = 0;
int dif = 1;
int msgLen = 0;
int msgSize = 0;
void setup() {
  for (int i = 0; i < 8; i++) {
    pinMode(rows[i], OUTPUT);
    pinMode(columns[i], OUTPUT);
    digitalWrite(rows[i], true);
    digitalWrite(columns[i], false);
  }

  char msg[] = "0123";
  
  msgSize = (sizeof msg / sizeof msg[0]);
  for (int i = 0; i < msgSize; i++)
    msgLen += len[(int)msg[i] - 48];
  msgLen += msgSize - 1;
}

void loop() {
      
  if ((curTime + 300)  < millis()) {    
    for (int i = 0; i < 8; i++)
      for (int j = 8; j > 0; j--)
        cur_state[i][j] = cur_state[i][j-1];

    for (int j = 0; j < 8; j++)
      cur_state[j][0] = cur_state[j][8];
    
    curTime = millis();
  }

  for (int i = 0; i < 8; i++)
    for (int j = 0; j < 8; j++)
      lights(i, j, cur_state[i][j]);
}

void lights(int row, int column, boolean state) {
  digitalWrite(rows[row], !state);
  digitalWrite(columns[column], state);
  digitalWrite(rows[(row + 8 - 1) % 8], true);
  digitalWrite(columns[(column + 8 - 1) % 8], false);
}

 
